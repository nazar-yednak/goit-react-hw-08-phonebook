{"version":3,"file":"static/js/474.5fb94fa1.chunk.js","mappings":"sPAEaA,EAAcC,EAAAA,GAAAA,GAAH,wEAKXC,EAAcD,EAAAA,GAAAA,GAAH,4LASXE,EAAcF,EAAAA,GAAAA,EAAH,kFAKXG,EAAeH,EAAAA,GAAAA,OAAH,8H,SCyBzB,I,MAAA,EAjCA,WACE,IAAQI,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAgCE,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAsBC,EAAtB,KAGMC,GADSC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,EAAe,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMS,QAAO,SAAAC,GAAO,oBAC1CA,QAD0C,IAC1CA,GAD0C,UAC1CA,EAASC,YADiC,aAC1C,EAAeC,cAAcC,SAASR,MAGxC,OACE,UAACV,EAAD,WACGa,IAAe,OACdA,QADc,IACdA,OADc,EACdA,EAAiBM,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,OAAb,OACnB,UAACnB,EAAD,YACE,UAACC,EAAD,WACGa,EADH,KACWK,MAEX,SAACjB,EAAD,CACEkB,KAAK,OACLC,QAAS,kBAAMf,EAAcY,IAC7BI,SAAUf,EAAOgB,UAHnB,sBAJgBL,OAcO,KAAb,OAAfP,QAAe,IAAfA,OAAA,EAAAA,EAAiBa,UAAgB,2CCvC3BC,EAAQ1B,EAAAA,GAAAA,MAAH,2DAIL2B,EAAqB3B,EAAAA,GAAAA,MAAH,oIAOlB4B,EAAY5B,EAAAA,GAAAA,IAAH,6DCMtB,I,MAAA,EAhBA,WACE,IAAM6B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACF,EAAD,WACE,UAACF,EAAD,oCAEE,SAACC,EAAD,CACEN,KAAK,OACLU,SAAU,SAAAC,GAAC,OAAIH,GAASI,EAAAA,EAAAA,IAAUD,EAAEE,OAAOC,iB,UCVxCC,EAAgBpC,EAAAA,GAAAA,KAAH,uJAQbqC,EAAYrC,EAAAA,GAAAA,MAAH,uGAMTsC,EAAatC,EAAAA,GAAAA,OAAH,oICZvB,SAASuC,IACP,IAAQnC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAqBoC,EAAAA,EAAAA,MAAdC,GAAP,eACMC,EAAWtC,EAmBjB,OACE,0BACE,UAACgC,EAAD,CAAeO,SAnBE,SAAAC,GACnBA,EAAMC,iBACN,IAAM9B,EAAO6B,EAAMV,OAAOnB,KAAKoB,MACzBf,EAASwB,EAAMV,OAAOd,OAAOe,MAC7BW,EAAe,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAUK,MAAK,SAAAjC,GAAO,OAAIC,IAASD,EAAQC,QACnE,GAAI+B,EACF,OAAOE,MAAM,GAAD,OAAIjC,EAAJ,4BAMZ0B,EAJgB,CACd1B,KAAAA,EACAK,OAAAA,IAKJwB,EAAMV,OAAOe,SAIX,WACE,qCACA,SAACZ,EAAD,CACEhB,KAAK,OACLN,KAAK,OACLmC,MAAM,yIACNC,UAAQ,KAEV,uCACA,SAACd,EAAD,CACEhB,KAAK,MACLN,KAAK,SACLmC,MAAM,+FACNC,UAAQ,KAEV,SAACb,EAAD,CAAYjB,KAAK,SAAjB,8BAMR,OAAe+B,EAAAA,EAAAA,MAAKb,GC5CL,SAASc,IAGtB,OAFAhD,EAAAA,EAAAA,OAGE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","views/ContactsView.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  background-color: #e5f107;\n  padding: 15px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 5px solid blue;\n  border-radius: 5px;\n  margin-top: 5px;\n  padding: 5px;\n`;\nexport const ContastText = styled.p`\n  color: black;\n  font-size: 15px;\n  font-weight: 700;\n`;\nexport const DeleteButton = styled.button`\n  width: 60px;\n  height: 30px;\n  background-color: red;\n  border-radius: 10%;\n  cursor: pointer;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  getFilters,\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/myContact/slice';\nimport {\n  ContactList,\n  DeleteButton,\n  ContactItem,\n  ContastText,\n} from './ContactList.styled';\n\nfunction Contact() {\n  const { data } = useGetContactsQuery();\n  const [deleteContact, result] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilters);\n  const normalizeFilter = filter;\n  const visibleContacts = data?.filter(contact =>\n    contact?.name?.toLowerCase().includes(normalizeFilter)\n  );\n\n  return (\n    <ContactList>\n      {visibleContacts &&\n        visibleContacts?.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContastText>\n              {name}: {number}\n            </ContastText>\n            <DeleteButton\n              type=\"text\"\n              onClick={() => deleteContact(id)}\n              disabled={result.isLoading}\n            >\n              Delete\n            </DeleteButton>\n          </ContactItem>\n        ))}\n\n      {visibleContacts?.length === 0 && <p>No contacts</p>}\n    </ContactList>\n  );\n}\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  color: red;\n  font-size: 25px;\n`;\nexport const InputSearchContact = styled.input`\n  background-color: #4c4ec3;\n  margin-top: 10px;\n  border-radius: 10px;\n  height: 45px;\n  width: 100%;\n`;\nexport const Container = styled.div`\n  margin-top: 50px;\n  width: 100%;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterOut } from '../../redux/myContact/slice';\nimport { Label, InputSearchContact, Container } from './Filter.styled';\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Label>\n        Find contacts by name\n        <InputSearchContact\n          type=\"text\"\n          onChange={e => dispatch(filterOut(e.target.value))}\n        ></InputSearchContact>\n      </Label>\n    </Container>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const FormPhonebook = styled.form`\n  width: 100%;\n  height: 150px;\n  background-color: #6286f0;\n  padding: 20px;\n  border-radius: 10px;\n  margin-top: 10px;\n`;\nexport const FormInput = styled.input`\n  display: block;\n  font-size: 18px;\n  margin-bottom: 20px;\n  width: 100%;\n`;\nexport const FormButton = styled.button`\n  margin-top: 15px;\n  background-color: #6286f0;\n  height: 30px;\n  width: 100%;\n  border-radius: 10px;\n`;\n","import { memo } from 'react';\nimport { FormPhonebook, FormInput, FormButton } from './Form.styled';\nimport { useGetContactsQuery } from '../../redux/myContact/slice';\nimport { useAddContactsMutation } from '../../redux/myContact/slice';\nfunction Form() {\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactsMutation();\n  const contacts = data;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n    const existingContact = contacts?.find(contact => name === contact.name);\n    if (existingContact) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        name,\n        number,\n      };\n      addContact(contact);\n    }\n\n    event.target.reset();\n  };\n  return (\n    <div>\n      <FormPhonebook onSubmit={handleSubmit}>\n        <label>Name</label>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label>Number</label>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <FormButton type=\"submit\">add contact</FormButton>\n      </FormPhonebook>\n    </div>\n  );\n}\n\nexport default memo(Form);\n","import { useGetContactsQuery } from '../redux/myContact/slice';\nimport Contact from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Form from 'components/Form/Form';\n\nexport default function ContactsView() {\n  useGetContactsQuery();\n\n  return (\n    <>\n      <Form />\n      <Filter />\n      <Contact />\n    </>\n  );\n}\n"],"names":["ContactList","styled","ContactItem","ContastText","DeleteButton","data","useGetContactsQuery","useDeleteContactMutation","deleteContact","result","normalizeFilter","useSelector","getFilters","visibleContacts","filter","contact","name","toLowerCase","includes","map","id","number","type","onClick","disabled","isLoading","length","Label","InputSearchContact","Container","dispatch","useDispatch","onChange","e","filterOut","target","value","FormPhonebook","FormInput","FormButton","Form","useAddContactsMutation","addContact","contacts","onSubmit","event","preventDefault","existingContact","find","alert","reset","title","required","memo","ContactsView"],"sourceRoot":""}